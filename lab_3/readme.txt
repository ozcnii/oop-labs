ООА:

Информационный объект БАЗА_ДАННЫХ
  - Свойства:
    - Файл_Студентов (`fioFile`).
    - Файл_Групп (`groupFile`).
    - Файл_Связей (`linkFile`).
  - Процедуры:
    - Инициализация_БД (конструктор, открывающий все файлы).
    - Закрытие_БД (деструктор, закрывающий все файлы).
    - Добавить_группу (`addGroup`).
    - Добавить_студента_с_привязкой (`addStudentWithLink`).
    - Найти_студентов_по_номеру_группы (`findStudentsByGroup`).

---------------------------------------------------------

main():

Функция `main` является управляющей точкой входа в программу и реализует следующий алгоритм:

1.  Создание объекта базы данных:
    В самом начале создается объект `database` класса `StudentGroupDB`. При этом автоматически вызывается конструктор класса, который выполняет открытие (или создание, если они отсутствуют) трёх файлов базы данных: `FIO.DAT`, `GROUP.DAT` и `LINK.IDX`.

2.  Запуск главного цикла:
    Программа входит в основной рабочий цикл `do-while`, который будет продолжаться до тех пор, пока пользователь не введет '0' для выхода.

3.  Отображение меню и получение ввода:
    На каждой итерации цикла экран очищается, и пользователю выводится текстовое меню с перечнем доступных операций (добавить группу, добавить студента и т.д.). Программа ожидает от пользователя числовой ввод.

4.  Обработка выбора пользователя:
    Введенное пользователем число обрабатывается в конструкции `switch`. В зависимости от выбора, вызывается соответствующий публичный метод объекта `database`:

    - `case 1`: `database.addGroup()`
    - `case 2`: `database.addStudentWithLink()`
    - `case 3`: `database.findStudentsByGroup()`
    - и т.д.

5.  Пауза для ознакомления с результатом:
    После выполнения выбранной операции (кроме выхода) программа приостанавливает свою работу и ожидает нажатия клавиши Enter, чтобы пользователь мог прочитать выведенную на экран информацию.

6.  Завершение работы:
    При вводе '0' цикл завершается. Функция `main` подходит к концу, что приводит к автоматическому вызову деструктора для объекта `database`. Деструктор корректно закрывает все ранее открытые файлы, обеспечивая целостность данных. Программа завершает свою работу.
